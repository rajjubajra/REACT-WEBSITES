{"ast":null,"code":"import _toConsumableArray from\"/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{actionTypes}from\"../actions/actionTypes\";var initialState={cart:[],totalPrice:0,cartProductId:[],/** is to handle ADD_TO_CART and ADD_QTY */viewCart:false,set:[]};export var reducerCart=function reducerCart(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.ADD_TO_CART:state=_objectSpread({},state,{cart:[].concat(_toConsumableArray(state.cart),[action.payload]),cartProductId:[].concat(_toConsumableArray(state.cartProductId),[action.payload.id]),totalPrice:state.totalPrice+action.payload.price});return state;case actionTypes.ADD_QTY:state=_objectSpread({},state,{state:[state.cart[action.cartIndex].qty+=1,state.cart[action.cartIndex].amount+=action.price],totalPrice:state.totalPrice+action.price});return state;case actionTypes.MINUS_QTY:state=_objectSpread({},state,{/** if qty is less then 1 delet entire row \n         * else minus the qty and amount */state:state.cart[action.cartIndex].qty===1?state.cart.splice(action.cartIndex,1):[state.cart[action.cartIndex].qty-=1,state.cart[action.cartIndex].amount-=action.price],totalPrice:state.totalPrice-action.price/** if product id not exist on \"cart\"\n         * remove product id from \"cartProductId\"\n         */});return state;case actionTypes.DELETE_FROM_CART:state=_objectSpread({},state,{state:state.cart.splice(action.cartIndex,1),totalPrice:Math.round(state.totalPrice)-Math.round(action.amount)});return state;case actionTypes.CLEAR_CART:state=_objectSpread({},state,{cart:[],totalPrice:0});return state;case actionTypes.VIEW_CART:state=_objectSpread({},state,{viewCart:state.viewCart?false:true});return state;default:return state;}};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/src/components/reducers/reducerCart.js"],"names":["actionTypes","initialState","cart","totalPrice","cartProductId","viewCart","set","reducerCart","state","action","type","ADD_TO_CART","payload","id","price","ADD_QTY","cartIndex","qty","amount","MINUS_QTY","splice","DELETE_FROM_CART","Math","round","CLEAR_CART","VIEW_CART"],"mappings":"yVAAA,OAASA,WAAT,KAA4B,wBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,UAAU,CAAE,CAFO,CAGnBC,aAAa,CAAE,EAHI,CAGD,2CAClBC,QAAQ,CAAE,KAJS,CAKnBC,GAAG,CAAE,EALc,CAArB,CAQA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBP,YAAyB,IAAXQ,CAAAA,MAAW,2CAC3D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,WAAW,CAACW,WAAjB,CACEH,KAAK,kBACAA,KADA,EAEHN,IAAI,8BAAMM,KAAK,CAACN,IAAZ,GAAkBO,MAAM,CAACG,OAAzB,EAFD,CAGHR,aAAa,8BAAMI,KAAK,CAACJ,aAAZ,GAA2BK,MAAM,CAACG,OAAP,CAAeC,EAA1C,EAHV,CAIHV,UAAU,CAAEK,KAAK,CAACL,UAAN,CAAmBM,MAAM,CAACG,OAAP,CAAeE,KAJ3C,EAAL,CAMA,MAAON,CAAAA,KAAP,CACF,IAAKR,CAAAA,WAAW,CAACe,OAAjB,CACEP,KAAK,kBACAA,KADA,EAEHA,KAAK,CAAE,CAACA,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACO,SAAlB,EAA6BC,GAA7B,EAAoC,CAArC,CACPT,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACO,SAAlB,EAA6BE,MAA7B,EAAuCT,MAAM,CAACK,KADvC,CAFJ,CAIHX,UAAU,CAAEK,KAAK,CAACL,UAAN,CAAmBM,MAAM,CAACK,KAJnC,EAAL,CAMA,MAAON,CAAAA,KAAP,CACF,IAAKR,CAAAA,WAAW,CAACmB,SAAjB,CACEX,KAAK,kBACAA,KADA,EAEH;2CAEAA,KAAK,CAAEA,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACO,SAAlB,EAA6BC,GAA7B,GAAqC,CAArC,CACHT,KAAK,CAACN,IAAN,CAAWkB,MAAX,CAAkBX,MAAM,CAACO,SAAzB,CAAoC,CAApC,CADG,CAEH,CAACR,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACO,SAAlB,EAA6BC,GAA7B,EAAoC,CAArC,CACFT,KAAK,CAACN,IAAN,CAAWO,MAAM,CAACO,SAAlB,EAA6BE,MAA7B,EAAuCT,MAAM,CAACK,KAD5C,CAND,CAQHX,UAAU,CAAEK,KAAK,CAACL,UAAN,CAAmBM,MAAM,CAACK,KACtC;;WATG,EAAL,CAaA,MAAON,CAAAA,KAAP,CACF,IAAKR,CAAAA,WAAW,CAACqB,gBAAjB,CACEb,KAAK,kBACAA,KADA,EAEHA,KAAK,CAAEA,KAAK,CAACN,IAAN,CAAWkB,MAAX,CAAkBX,MAAM,CAACO,SAAzB,CAAoC,CAApC,CAFJ,CAGHb,UAAU,CAAEmB,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACL,UAAjB,EAA+BmB,IAAI,CAACC,KAAL,CAAWd,MAAM,CAACS,MAAlB,CAHxC,EAAL,CAKA,MAAOV,CAAAA,KAAP,CACF,IAAKR,CAAAA,WAAW,CAACwB,UAAjB,CACEhB,KAAK,kBACAA,KADA,EAEHN,IAAI,CAAE,EAFH,CAGHC,UAAU,CAAE,CAHT,EAAL,CAKA,MAAOK,CAAAA,KAAP,CACF,IAAKR,CAAAA,WAAW,CAACyB,SAAjB,CACEjB,KAAK,kBACAA,KADA,EAEHH,QAAQ,CAAEG,KAAK,CAACH,QAAN,CAAiB,KAAjB,CAAyB,IAFhC,EAAL,CAIA,MAAOG,CAAAA,KAAP,CACF,QACE,MAAOA,CAAAA,KAAP,CArDJ,CAuDD,CAxDM","sourcesContent":["import { actionTypes } from \"../actions/actionTypes\";\n\nconst initialState = {\n  cart: [],\n  totalPrice: 0,\n  cartProductId: [],/** is to handle ADD_TO_CART and ADD_QTY */\n  viewCart: false,\n  set: []\n}\n\nexport const reducerCart = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      state = {\n        ...state,\n        cart: [...state.cart, action.payload],\n        cartProductId: [...state.cartProductId, action.payload.id],\n        totalPrice: state.totalPrice + action.payload.price\n      }\n      return state;\n    case actionTypes.ADD_QTY:\n      state = {\n        ...state,\n        state: [state.cart[action.cartIndex].qty += 1,\n        state.cart[action.cartIndex].amount += action.price],\n        totalPrice: state.totalPrice + action.price\n      }\n      return state;\n    case actionTypes.MINUS_QTY:\n      state = {\n        ...state,\n        /** if qty is less then 1 delet entire row \n         * else minus the qty and amount */\n        state: state.cart[action.cartIndex].qty === 1\n          ? state.cart.splice(action.cartIndex, 1)\n          : [state.cart[action.cartIndex].qty -= 1,\n          state.cart[action.cartIndex].amount -= action.price],\n        totalPrice: state.totalPrice - action.price,\n        /** if product id not exist on \"cart\"\n         * remove product id from \"cartProductId\"\n         */\n      }\n      return state;\n    case actionTypes.DELETE_FROM_CART:\n      state = {\n        ...state,\n        state: state.cart.splice(action.cartIndex, 1),\n        totalPrice: Math.round(state.totalPrice) - Math.round(action.amount)\n      }\n      return state;\n    case actionTypes.CLEAR_CART:\n      state = {\n        ...state,\n        cart: [],\n        totalPrice: 0,\n      }\n      return state;\n    case actionTypes.VIEW_CART:\n      state = {\n        ...state,\n        viewCart: state.viewCart ? false : true\n      }\n      return state;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}