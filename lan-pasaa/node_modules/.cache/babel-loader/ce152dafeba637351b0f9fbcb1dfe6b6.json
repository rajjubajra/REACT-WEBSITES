{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/src/components/contents/page/Shop/ShopItemDetails.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionClearItemDetails } from '../../../actions/actionNavigation';\nimport { actionAddToCart, actionAddQty } from '../../../actions/actionCart';\n\nconst ShopItemDetails = () => {\n  const dispatch = useDispatch();\n  /** get selected product Id from redux store */\n\n  const itemId = useSelector(state => state.reducerNavigation.itemId);\n  const itemName = useSelector(state => state.reducerNavigation.itemName);\n  const itemPrice = useSelector(state => state.reducerNavigation.itemPrice);\n  const itemImage = useSelector(state => state.reducerNavigation.itemImage);\n  console.log(itemId, itemImage);\n  /** in order to handle ADD_TO_CART and ADD_QTY */\n\n  /** if Product Id exist take action ADD_QTY else ADD_TO_CART */\n\n  const cart = useSelector(state => state.reducerCart.cart);\n  /** if Product Id exist in the cart array \n  * take action ADD_QTY else ADD_TO_CART */\n\n  let indexId = element => element.id === itemId;\n\n  let cartIndex = cart.findIndex(indexId); //console.log(\"CART INDEX?\", cartIndex);\n\n  return React.createElement(\"div\", {\n    className: \"product-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sale-item\",\n    src: require(`../../../../images/LanPasaa/${itemImage}`),\n    alt: itemName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Product Code: \", itemId), React.createElement(\"div\", {\n    className: \"product-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Product: \", itemName), React.createElement(\"div\", {\n    className: \"rate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Price: \\xA3 \", Number(itemPrice).toFixed(2)), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Porro doloribus, natus iste a nulla suscipit totam eos iure, deserunt, molestiae impedit veniam. Fuga non iste in consequuntur a nemo dicta!\")), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => dispatch(actionClearItemDetails()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"BACK\"), cartIndex === -1 ? React.createElement(\"button\", {\n    onClick: () => dispatch(actionAddToCart(itemId, itemName, itemPrice, 1, itemPrice)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add to cart\") : React.createElement(\"button\", {\n    onClick: () => dispatch(actionAddQty(cartIndex, itemName, itemPrice, 1, itemPrice)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Add Quantity \"))));\n};\n\nexport default ShopItemDetails;\n/* onClick={() => dispatch(actionAddToCart(itemId, itemName, itemPrice, 1, itemPrice))}  */","map":{"version":3,"sources":["/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/src/components/contents/page/Shop/ShopItemDetails.js"],"names":["React","useSelector","useDispatch","actionClearItemDetails","actionAddToCart","actionAddQty","ShopItemDetails","dispatch","itemId","state","reducerNavigation","itemName","itemPrice","itemImage","console","log","cart","reducerCart","indexId","element","id","cartIndex","findIndex","require","Number","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionClearItemDetails } from '../../../actions/actionNavigation';\nimport { actionAddToCart, actionAddQty } from '../../../actions/actionCart';\n\nconst ShopItemDetails = () => {\n  const dispatch = useDispatch();\n\n  /** get selected product Id from redux store */\n  const itemId = useSelector(state => state.reducerNavigation.itemId);\n  const itemName = useSelector(state => state.reducerNavigation.itemName);\n  const itemPrice = useSelector(state => state.reducerNavigation.itemPrice);\n  const itemImage = useSelector(state => state.reducerNavigation.itemImage);\n  console.log(itemId, itemImage);\n\n  /** in order to handle ADD_TO_CART and ADD_QTY */\n  /** if Product Id exist take action ADD_QTY else ADD_TO_CART */\n  const cart = useSelector(state => state.reducerCart.cart);\n\n  /** if Product Id exist in the cart array \n  * take action ADD_QTY else ADD_TO_CART */\n  let indexId = (element) => element.id === itemId;\n  let cartIndex = cart.findIndex(indexId);\n  //console.log(\"CART INDEX?\", cartIndex);\n\n  return (\n    <div className=\"product-item\">\n      <div className=\"image\">\n        <img className=\"sale-item\" src={require(`../../../../images/LanPasaa/${itemImage}`)} alt={itemName} />\n      </div>\n      <div className=\"details\">\n        <div className=\"product-code\">Product Code: {itemId}</div>\n        <div className=\"product-name\">Product: {itemName}</div>\n        <div className=\"rate\">Price: Â£ {Number(itemPrice).toFixed(2)}</div>\n        <div className=\"description\">\n          <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Porro doloribus, natus iste a nulla suscipit totam eos iure, deserunt, molestiae impedit veniam. Fuga non iste in consequuntur a nemo dicta!</p>\n        </div>\n        <div className=\"buttons\">\n          <button onClick={() => dispatch(actionClearItemDetails())}>BACK</button>\n          {\n            cartIndex === -1\n              ? <button\n                onClick={() => dispatch(actionAddToCart(itemId, itemName, itemPrice, 1, itemPrice))}>Add to cart</button>\n              : <button onClick={() => dispatch(actionAddQty(cartIndex, itemName, itemPrice, 1, itemPrice))}> Add Quantity </button>\n          }\n        </div>\n\n      </div>\n    </div>\n  )\n}\nexport default ShopItemDetails;\n\n/* onClick={() => dispatch(actionAddToCart(itemId, itemName, itemPrice, 1, itemPrice))}  */\n"]},"metadata":{},"sourceType":"module"}