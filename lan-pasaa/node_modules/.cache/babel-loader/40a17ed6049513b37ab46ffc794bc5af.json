{"ast":null,"code":"import axios from'axios';import{actionTypes}from'./actionTypes';export function actionFetchData(){return function(dispatch){dispatch({type:actionTypes.FETCH_LAN_PASAA_DATA_START});// axios.get(\"https://my-json-server.typicode.com/rajjubajra/lan-pasaa-json/categories\")\naxios.get(\"http://localhost:3000/LanPasaa\").then(function(res){dispatch({type:actionTypes.FETCH_LAN_PASAA_DATA_RECEIVED,feched:true,fetching:false,payload:res.data});}).catch(function(error){dispatch({type:actionTypes.FETCH_LAN_PASAA_DATA_ERROR,fetching:false,fetched:false,error:error});});};}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/src/components/websites/LanPasaa/actions/actionFetchData.js"],"names":["axios","actionTypes","actionFetchData","dispatch","type","FETCH_LAN_PASAA_DATA_START","get","then","res","FETCH_LAN_PASAA_DATA_RECEIVED","feched","fetching","payload","data","catch","error","FETCH_LAN_PASAA_DATA_ERROR","fetched"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChC,MAAO,UAAUC,QAAV,CAAoB,CACzBA,QAAQ,CAAC,CAAEC,IAAI,CAAEH,WAAW,CAACI,0BAApB,CAAD,CAAR,CACA;AACAL,KAAK,CAACM,GAAN,CAAU,gCAAV,EACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACbL,QAAQ,CAAC,CACPC,IAAI,CAAEH,WAAW,CAACQ,6BADX,CAEPC,MAAM,CAAE,IAFD,CAEOC,QAAQ,CAAE,KAFjB,CAGPC,OAAO,CAAEJ,GAAG,CAACK,IAHN,CAAD,CAAR,CAKD,CAPH,EAQGC,KARH,CAQS,SAACC,KAAD,CAAW,CAChBZ,QAAQ,CAAC,CACPC,IAAI,CAAEH,WAAW,CAACe,0BADX,CAEPL,QAAQ,CAAE,KAFH,CAEUM,OAAO,CAAE,KAFnB,CAE0BF,KAAK,CAAEA,KAFjC,CAAD,CAAR,CAID,CAbH,EAcD,CAjBD,CAkBD","sourcesContent":["import axios from 'axios';\nimport { actionTypes } from './actionTypes';\n\nexport function actionFetchData() {\n  return function (dispatch) {\n    dispatch({ type: actionTypes.FETCH_LAN_PASAA_DATA_START });\n    // axios.get(\"https://my-json-server.typicode.com/rajjubajra/lan-pasaa-json/categories\")\n    axios.get(\"http://localhost:3000/LanPasaa\")\n      .then((res) => {\n        dispatch({\n          type: actionTypes.FETCH_LAN_PASAA_DATA_RECEIVED,\n          feched: true, fetching: false,\n          payload: res.data\n        })\n      })\n      .catch((error) => {\n        dispatch({\n          type: actionTypes.FETCH_LAN_PASAA_DATA_ERROR,\n          fetching: false, fetched: false, error: error\n        })\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}