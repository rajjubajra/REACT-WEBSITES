{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { reducerFetchData } from './reducers/reducerFetchData'; //import { reducerFetchCategories } from './reducers/reducerFetchCategories';\n\nimport { reducerFetchProducts } from './reducers/reducerFetchProducts';\nimport { reducerNavigation } from './reducers/reducerNavigation';\nimport { reducerCart } from './reducers/reducerCart';\nconst reducer = combineReducers({\n  reducerFetchProducts,\n  reducerFetchData,\n  reducerNavigation,\n  reducerCart\n});\nconst middleware = applyMiddleware(thunk, createLogger());\nexport const store = createStore(reducer, middleware);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/REACT-WEBSITES/la-pasaa/src/components/websites/LanPasaa/store.js"],"names":["createStore","applyMiddleware","combineReducers","createLogger","thunk","reducerFetchData","reducerFetchProducts","reducerNavigation","reducerCart","reducer","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,gBAAT,QAAiC,6BAAjC,C,CACA;;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAC7B;AACEI,EAAAA,oBADF;AAEED,EAAAA,gBAFF;AAGEE,EAAAA,iBAHF;AAKEC,EAAAA;AALF,CAD6B,CAA/B;AAUA,MAAME,UAAU,GAAGT,eAAe,CAACG,KAAD,EAAQD,YAAY,EAApB,CAAlC;AAEA,OAAO,MAAMQ,KAAK,GAAGX,WAAW,CAACS,OAAD,EAAUC,UAAV,CAAzB","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport { reducerFetchData } from './reducers/reducerFetchData';\n//import { reducerFetchCategories } from './reducers/reducerFetchCategories';\nimport { reducerFetchProducts } from './reducers/reducerFetchProducts';\nimport { reducerNavigation } from './reducers/reducerNavigation';\nimport { reducerCart } from './reducers/reducerCart';\n\nconst reducer = combineReducers(\n  {\n    reducerFetchProducts,\n    reducerFetchData,\n    reducerNavigation,\n\n    reducerCart\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);\n"]},"metadata":{},"sourceType":"module"}