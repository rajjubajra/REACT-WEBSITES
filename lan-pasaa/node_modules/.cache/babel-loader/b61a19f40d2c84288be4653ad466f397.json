{"ast":null,"code":"import{createStore,applyMiddleware,combineReducers}from'redux';import{createLogger}from'redux-logger';import thunk from'redux-thunk';import{reducerFetchData}from'./reducers/reducerFetchData';//import { reducerFetchCategories } from './reducers/reducerFetchCategories';\nimport{reducerFetchProducts}from'./reducers/reducerFetchProducts';import{reducerNavigation}from'./reducers/reducerNavigation';import{reducerCart}from'./reducers/reducerCart';var reducer=combineReducers({reducerFetchProducts:reducerFetchProducts,reducerFetchData:reducerFetchData,reducerNavigation:reducerNavigation,reducerCart:reducerCart});var middleware=applyMiddleware(thunk,createLogger());export var store=createStore(reducer,middleware);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/REACT-WEBSITES/lan-pasaa/src/components/websites/LanPasaa/store.js"],"names":["createStore","applyMiddleware","combineReducers","createLogger","thunk","reducerFetchData","reducerFetchProducts","reducerNavigation","reducerCart","reducer","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,OAASC,gBAAT,KAAiC,6BAAjC,CACA;AACA,OAASC,oBAAT,KAAqC,iCAArC,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,WAAT,KAA4B,wBAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAGP,eAAe,CAC7B,CACEI,oBAAoB,CAApBA,oBADF,CAEED,gBAAgB,CAAhBA,gBAFF,CAGEE,iBAAiB,CAAjBA,iBAHF,CAKEC,WAAW,CAAXA,WALF,CAD6B,CAA/B,CAUA,GAAME,CAAAA,UAAU,CAAGT,eAAe,CAACG,KAAD,CAAQD,YAAY,EAApB,CAAlC,CAEA,MAAO,IAAMQ,CAAAA,KAAK,CAAGX,WAAW,CAACS,OAAD,CAAUC,UAAV,CAAzB","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport { reducerFetchData } from './reducers/reducerFetchData';\n//import { reducerFetchCategories } from './reducers/reducerFetchCategories';\nimport { reducerFetchProducts } from './reducers/reducerFetchProducts';\nimport { reducerNavigation } from './reducers/reducerNavigation';\nimport { reducerCart } from './reducers/reducerCart';\n\nconst reducer = combineReducers(\n  {\n    reducerFetchProducts,\n    reducerFetchData,\n    reducerNavigation,\n\n    reducerCart\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);\n"]},"metadata":{},"sourceType":"module"}